<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentRepository">

  <!-- 受講生の全件検索 -->
  <select id="search" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students WHERE is_deleted = false
  </select>

  <!-- 受講生の検索 -->
  <select id="searchStudent" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students WHERE student_id = #{id}
  </select>

  <!-- 受講生コース情報の全件検索 -->
  <select id="searchStudentCourseList" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT * FROM students_courses
  </select>

  <!-- 受講生コース情報の検索 -->
  <select id="searchStudentCourse" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT * FROM students_Courses WHERE student_id = #{id}
  </select>

  <!-- 申込状況の全件検索 -->
  <select id="searchStatusList" resultType="raisetech.StudentManagement.data.CourseStatus">
    SELECT * FROM course_status
  </select>

  <!-- 申込状況の検索 -->
  <select id="searchStatus" resultType="raisetech.StudentManagement.data.CourseStatus">
    SELECT * FROM course_status
    JOIN students_courses ON course_status.course_id = students_courses.course_id
    WHERE students_courses.student_id = #{id}
  </select>

  <!-- 受講生の新規登録 -->
  <insert id="registerStudent" parameterType="raisetech.StudentManagement.data.Student"
    useGeneratedKeys="true" keyProperty="studentId">
    INSERT INTO students (name, furigana, nickname, email_address, residential_area, age, gender,
    remark, is_deleted)
    VALUES (#{name}, #{furigana}, #{nickname}, #{emailAddress}, #{residentialArea}, #{age},
    #{gender}, #{remark}, false)
  </insert>

  <!-- 受講生コース情報の新規登録 -->
  <insert id="registerStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse"
    useGeneratedKeys="true" keyProperty="courseId">
    INSERT INTO students_courses (student_id, course_name, start_date, expected_end_date)
    VALUES(#{studentId}, #{courseName}, #{startDate}, #{expectedEndDate})
  </insert>

  <!-- 申込状況の新規登録 -->
  <insert id="registerCourseStatus" parameterType="raisetech.StudentManagement.data.CourseStatus"
    useGeneratedKeys="true" keyProperty="statusId">
    INSERT INTO course_status (course_id, status)
    VALUES(#{courseId},'仮申込')
  </insert>

  <!-- 受講生の更新 -->
  <update id="updateStudent" parameterType="raisetech.StudentManagement.data.Student">
    UPDATE students
    SET
    name = #{name},
    furigana = #{furigana},
    nickname = #{nickname},
    email_address = #{emailAddress},
    residential_area = #{residentialArea},
    age = #{age},
    gender = #{gender},
    remark = #{remark},
    is_deleted = #{isDeleted}
    WHERE student_id = #{studentId}
  </update>

  <!-- 受講生コース情報の更新 -->
  <update id="updateStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse">
    UPDATE students_courses
    SET
    course_name = #{courseName}
    WHERE course_id = #{courseId}
  </update>

  <!-- 申込状況の更新 -->
  <update id="updateCourseStatus" parameterType="raisetech.StudentManagement.data.CourseStatus">
    UPDATE course_status
    SET
    status = #{status}
    WHERE course_id = #{courseId}
  </update>

  <!-- 受講生の条件指定検索 -->
  <select id="searchStudentCondition" parameterType="raisetech.StudentManagement.data.Student">
    SELECT * FROM students
    WHERE 1=1
    <if test="name != null and name != ''">
      AND name LIKE CONCAT('%',#{name}, '%')
    </if>
    <if test="furigana != null and furigana != ''">
      AND furigana LIKE CONCAT('%',#{furigana}, '%')
    </if>
    <if test="residentialArea != null and residentialArea != ''">
      AND residential_area LIKE CONCAT('%',#{residentialArea}, '%')
    </if>
    <if test="age != null and age !=''">
      AND age = #{age}
    </if>
    <if test="gender != null and gender != ''">
      AND gender = #{gender}
    </if>
    <if test="remark != null and remark != ''">
      AND remark LIKE CONCAT('%',#{remark}, '%')
    </if>
  </select>

  <!-- 受講生コースの条件指定検索 -->
  <select id="searchCourseCondition" parameterType="raisetech.StudentManagement.data.StudentCourse">
    SELECT * FROM students_Courses
    WHERE 1=1
    <if test="courseName != null and courseName != ''">
      AND course_name LIKE CONCAT('%',#{courseName}, '%')
    </if>
  </select>

  <!-- 受講生コースの条件指定検索 -->
  <select id="searchStatusCondition" parameterType="raisetech.StudentManagement.data.CourseStatus">
    SELECT * FROM course_status
    WHERE 1=1
    <if test="status != null and status != ''">
      AND status = #{status}
    </if>
  </select>


</mapper>
